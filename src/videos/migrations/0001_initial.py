# Generated by Django 2.0.2 on 2018-04-02 18:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('likes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('likeablemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='likes.LikeableMixin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('comments_count', models.IntegerField(default=0, verbose_name='Число комментариев')),
                ('title', models.CharField(max_length=255, verbose_name='Название коллекции')),
                ('categories', models.ManyToManyField(related_name='collections', to='videos.Category', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
            bases=('likes.likeablemixin', models.Model),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('likeablemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='likes.LikeableMixin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('comments_count', models.IntegerField(default=0, verbose_name='Число комментариев')),
                ('title', models.CharField(max_length=255, verbose_name='Название курса')),
                ('categories', models.ManyToManyField(related_name='courses', to='videos.Category', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
            bases=('likes.likeablemixin', models.Model),
        ),
        migrations.CreateModel(
            name='CourseSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='videos.Course', verbose_name='Курс')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Подписка на курс',
                'verbose_name_plural': 'Подписки на курсы',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('likeablemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='likes.LikeableMixin')),
                ('comments_count', models.IntegerField(default=0, verbose_name='Число комментариев')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('bio', models.TextField(verbose_name='О лекторе')),
            ],
            options={
                'verbose_name': 'Лектор',
                'verbose_name_plural': 'Лекторы',
            },
            bases=('likes.likeablemixin', models.Model),
        ),
        migrations.CreateModel(
            name='LecturerSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='videos.Lecturer', verbose_name='Лектор')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecturer_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Подписка на лектора',
                'verbose_name_plural': 'Подписки на лекторов',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 1')),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 2')),
            ],
            options={
                'verbose_name': 'Подписка на пользователя',
                'verbose_name_plural': 'Подписки на пользователей',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('likeablemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='likes.LikeableMixin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('text', models.CharField(max_length=255, verbose_name='Текст')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удален')),
                ('comments_count', models.IntegerField(default=0, verbose_name='Число комментариев')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка на видео')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('categories', models.ManyToManyField(related_name='videos', to='videos.Category', verbose_name='Категории')),
                ('lecturer', models.ManyToManyField(related_name='lections', to='videos.Lecturer', verbose_name='Лектор')),
                ('video_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
            bases=('likes.likeablemixin', models.Model),
        ),
        migrations.AddField(
            model_name='course',
            name='lecturers',
            field=models.ManyToManyField(related_name='courses', to='videos.Lecturer', verbose_name='Лектор'),
        ),
        migrations.AddField(
            model_name='collection',
            name='lecturers',
            field=models.ManyToManyField(related_name='collections', to='videos.Lecturer', verbose_name='Лекторы'),
        ),
    ]
